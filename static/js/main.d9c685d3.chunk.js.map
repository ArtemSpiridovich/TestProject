{"version":3,"sources":["components/Header/header.module.css","components/images-blocks/images-blocks.module.css","components/mainScreen/mainScreen.module.css","assets/image1-min.jpeg","assets/image2-min.jpg","assets/image3-min.jpeg","components/svg/svg.js","components/Header/Header.js","components/mainScreen/MainScreen.js","components/images-blocks/images.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LogoSvg","w","f","id","data-name","xmlns","width","fill","viewBox","d","Header","useState","viewMode","changeViewMode","classForLinks","s","links","noLinks","className","content","context1","context2","onClick","setTimeout","but","buttonClose","button","lin","MainScreen","context","Images","images","image","src","img1","img2","img3","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,yBAAyB,SAAW,yBAAyB,IAAM,oBAAoB,OAAS,uBAAuB,YAAc,4BAA4B,IAAM,oBAAoB,QAAU,wBAAwB,MAAQ,wB,gBCApSD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,QAAU,+BAA+B,OAAS,8BAA8B,MAAQ,+B,kCCAnJD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,QAAU,8B,kBCDlED,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,+JCc5BC,EAZC,SAAC,GAAY,IAAXC,EAAU,EAAVA,EAAGC,EAAO,EAAPA,EACnB,OACE,yBAAKC,GAAG,YAAYC,YAAU,YAAYC,MAAM,6BAA6BC,MAAOL,EAAGM,KAAML,EAAGM,QAAQ,kBACtG,0BACEC,EAAE,6uDACJ,0BACEA,EAAE,oQC+BKC,EAjCA,WAAO,IAAD,EAEeC,oBAAS,GAFxB,mBAEbC,EAFa,KAEHC,EAFG,KAIbC,EAAgBF,EAAWG,IAAEC,MAAQD,IAAEE,QAE7C,OACE,4BAAQC,UAAWH,IAAEI,SACnB,yBAAKD,UAAU,WACb,yBAAKA,UAAWH,IAAEK,UAChB,mCACA,oCACE,kBAAC,EAAD,CAASnB,EAAE,QAAQC,EAAC,iBACtB,sCACA,uCAEF,yBAAKgB,UAAWH,IAAEM,UACd,kBAAC,EAAD,CAASpB,EAAC,kBAAqBC,EAAC,iBAClC,4BAAQoB,QAAS,kBAAMC,YAAW,kBAAMV,GAAgBD,KAAW,IAAIM,UAAS,UAAKH,IAAES,IAAP,YAAsB,UAARZ,EAAcG,IAAEU,YAAmBV,IAAEW,UAC/H,8BAAW,8BAAW,+BAE1B,yBAAKR,UAAS,UAAKH,IAAEY,IAAP,YAAcb,IAC1B,mCACA,oCACA,sCACA,2C,gBCdGc,EAbI,WAEjB,OACE,yBAAKV,UAAWH,IAAEI,SAChB,yBAAKD,UAAU,WACb,yBAAKA,UAAWH,IAAEc,SAChB,wD,wECgBKC,EAlBA,WACb,OACE,yBAAKZ,UAAWH,IAAEI,SAChB,yBAAKD,UAAU,WACb,yBAAKA,UAAWH,IAAEc,SAChB,8DACA,8FACA,yBAAKX,UAAWH,IAAEgB,QAChB,yBAAKb,UAAWH,IAAEiB,MAAOC,IAAKC,MAC9B,yBAAKhB,UAAWH,IAAEiB,MAAOC,IAAKE,MAC9B,yBAAKjB,UAAWH,IAAEiB,MAAOC,IAAKG,WCF3BC,EAVH,WACV,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d9c685d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"header_content__4TZTh\",\"context1\":\"header_context1__1aEU1\",\"context2\":\"header_context2__o_uBD\",\"but\":\"header_but__2Et1D\",\"button\":\"header_button__pzeCh\",\"buttonClose\":\"header_buttonClose__IyT6C\",\"lin\":\"header_lin__3sJy_\",\"noLinks\":\"header_noLinks__aKXXR\",\"links\":\"header_links__3xsJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"images-blocks_content__3rgUf\",\"context\":\"images-blocks_context__1IMLa\",\"images\":\"images-blocks_images__2W7dk\",\"image\":\"images-blocks_image__17o4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"mainScreen_content__oVKV0\",\"context\":\"mainScreen_context__28mfz\"};","module.exports = __webpack_public_path__ + \"static/media/image1-min.a560f017.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/image2-min.7fcb31b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3-min.b045ba99.jpeg\";","import React from \"react\";\r\n\r\nconst LogoSvg = ({w, f}) => {\r\n  return (\r\n    <svg id=\"logoipsum\" data-name=\"logoipsum\" xmlns=\"http://www.w3.org/2000/svg\" width={w} fill={f} viewBox=\"0 0 177.78 100\">\r\n      <path\r\n        d=\"M61.51,44.26h3.21v13H61.51ZM66,52.37c0-3.22,2-5.15,5-5.15s5,1.93,5,5.15-1.93,5.17-5,5.17S66,55.66,66,52.37Zm6.82,0c0-1.77-.69-2.81-1.79-2.81s-1.78,1-1.78,2.81.68,2.8,1.78,2.8S72.84,54.18,72.84,52.38Zm4.46,5.56h3.1a1.66,1.66,0,0,0,1.74,1c1.23,0,1.87-.66,1.87-1.64v-1.8H84a3.07,3.07,0,0,1-3,1.75c-2.35,0-3.91-1.79-3.91-4.87s1.49-5,4-5a3.07,3.07,0,0,1,3,1.89H84V47.45h3.18v9.74c0,2.35-2.08,3.82-5.14,3.82C79.26,61,77.48,59.73,77.3,57.94ZM84,52.37c0-1.57-.72-2.56-1.86-2.56s-1.84,1-1.84,2.56.69,2.48,1.84,2.48S84,54,84,52.37Zm4.45,0c0-3.22,2-5.15,5-5.15s5,1.93,5,5.15-1.94,5.17-5,5.17S88.47,55.66,88.47,52.37Zm6.82,0c0-1.77-.7-2.81-1.79-2.81s-1.78,1-1.78,2.81.68,2.8,1.78,2.8S95.29,54.18,95.29,52.38Zm4.48-7.29a1.64,1.64,0,1,1,1.64,1.57A1.58,1.58,0,0,1,99.77,45.09Zm0,2.36H103V57.3h-3.2Zm14.94,4.93c0,3.21-1.44,5.07-3.89,5.07a3.07,3.07,0,0,1-3-1.83h-.06v4.86h-3.21v-13h3.19v1.76h.06a3.09,3.09,0,0,1,3-1.9C113.3,47.31,114.75,49.16,114.75,52.38Zm-3.27,0c0-1.56-.73-2.57-1.86-2.57s-1.84,1-1.85,2.57.72,2.56,1.85,2.56S111.48,54,111.48,52.38Zm8.75-5.16c2.69,0,4.36,1.27,4.38,3.31h-2.93c0-.71-.59-1.15-1.47-1.15s-1.3.34-1.3.85.37.67,1.11.82l2.06.42c2,.42,2.8,1.22,2.8,2.71,0,2-1.85,3.36-4.6,3.36s-4.54-1.32-4.67-3.33h3.11c.09.73.67,1.16,1.61,1.16s1.38-.3,1.38-.83-.3-.62-1.07-.78l-1.86-.39c-1.93-.41-2.94-1.42-2.94-2.93C115.84,48.47,117.52,47.22,120.23,47.22Zm15.4,10.08h-3.11V55.44h-.06a2.82,2.82,0,0,1-2.87,2.05A3.43,3.43,0,0,1,126,53.78V47.45h3.21v5.64c0,1.16.61,1.79,1.61,1.79A1.64,1.64,0,0,0,132.43,53V47.45h3.2Zm1.55-9.85h3.12v1.9h.07a2.86,2.86,0,0,1,2.81-2.08,2.56,2.56,0,0,1,2.74,2.09H146a3,3,0,0,1,3-2.09,3.12,3.12,0,0,1,3.23,3.35V57.3H149V51.43c0-1-.47-1.56-1.38-1.56a1.4,1.4,0,0,0-1.41,1.59V57.3h-3.06V51.4c0-1-.49-1.53-1.37-1.53a1.43,1.43,0,0,0-1.43,1.61V57.3h-3.21Z\"/>\r\n      <path\r\n        d=\"M55.16,45.11A9.88,9.88,0,0,0,38,38.43H25.52V64.77H51.87V52.46A9.87,9.87,0,0,0,55.16,45.11Zm-5.07,0a4.82,4.82,0,1,1-4.82-4.81A4.82,4.82,0,0,1,50.09,45.11ZM46.8,59.7H30.59V43.5h4.94a9.55,9.55,0,0,0-.15,1.61A9.9,9.9,0,0,0,45.27,55a9.67,9.67,0,0,0,1.53-.13Z\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default LogoSvg\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './header.module.css';\r\nimport LogoSvg from \"../svg/svg\";\r\nimport '../../index.css'\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const[viewMode, changeViewMode] = useState(false)\r\n\r\n  const classForLinks = viewMode ? s.links : s.noLinks;\r\n\r\n  return (\r\n    <header className={s.content}>\r\n      <div className='wrapper'>\r\n        <div className={s.context1}>\r\n          <a>HOME</a>\r\n          <a>ABOUT</a>\r\n            <LogoSvg w='300px' f={`var(--white)`}/>\r\n          <a>SERVICE</a>\r\n          <a>CONTACT</a>\r\n        </div>\r\n        <div className={s.context2}>\r\n            <LogoSvg w={`calc(100vw/2.6)`} f={`var(--white)`}/>\r\n          <button onClick={() => setTimeout(() => changeViewMode(!viewMode), 0)} className={`${s.but} ${viewMode ? `${s.buttonClose}` : `${s.button}`}`}>\r\n              <div></div><div></div><div></div>\r\n          </button>\r\n          <div className={`${s.lin} ${classForLinks}`}>\r\n            <a>HOME</a>\r\n            <a>ABOUT</a>\r\n            <a>SERVICE</a>\r\n            <a>CONTACT</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { ko } from 'react';\r\nimport \"../../index.css\";\r\nimport s from \"./mainScreen.module.css\";\r\n\r\nconst MainScreen = () => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <div className='wrapper'>\r\n        <div className={s.context}>\r\n          <h1>I am Open Sans 120px</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","import React from 'react';\r\nimport \"../../index.css\";\r\nimport s from \"./images-blocks.module.css\";\r\n\r\nimport img1 from '../../assets/image1-min.jpeg'\r\nimport img2 from '../../assets/image2-min.jpg'\r\nimport img3 from '../../assets/image3-min.jpeg'\r\n\r\nconst Images = () => {\r\n  return (\r\n    <div className={s.content}>\r\n      <div className='wrapper'>\r\n        <div className={s.context}>\r\n          <h2>I am open sans extra bold 48px</h2>\r\n          <p>Please follow all directions, make fonts the same size, respect</p>\r\n          <div className={s.images}>\r\n            <img className={s.image} src={img1}/>\r\n            <img className={s.image} src={img2}/>\r\n            <img className={s.image} src={img3}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Images;\r\n","import React from 'react';\nimport Header from \"./components/Header/Header\";\nimport MainScreen from \"./components/mainScreen/MainScreen\";\nimport './App.css';\nimport Images from \"./components/images-blocks/images\";\n\nconst App = () => {\n  return (\n    <>\n      <Header/>\n      <MainScreen/>\n      <Images/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}